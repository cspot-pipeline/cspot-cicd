name: Run Stage 1

on: push

jobs:
  launch-instance:
    runs-on: ubuntu-latest
    outputs:
      CURR_ID: ${{ steps.run-script.outputs.CURR_ID }}
      PUBLIC_IP: ${{ steps.run-script.outputs.PUBLIC_IP }}
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run script file
        id: run-script
        run: .github/launch-runner.py --key-name codici2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

  add-runner-to-repo:
    needs: launch-instance
    runs-on: ubuntu-latest
    outputs:
      TOKEN: ${{ steps.run-config.outputs.TOKEN }}
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: run config script
        id: run-config
        run: .github/config_runner.sh -t $ADD_RUNNER
        env:
          ADD_RUNNER: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

  configure-remote-runner:
    needs: [launch-instance, add-runner-to-repo]
    runs-on: ubuntu-latest
    steps:
      - name: Set IP to Env Var
        run: |
          echo "PUBLIC_IP=${PUBLIC_IP}" >> $GITHUB_ENV
        env:
          PUBLIC_IP: ${{ needs.launch-instance.outputs.PUBLIC_IP }}
      # - name: Check Token
      #   env:
      #     TOKEN: ${{ needs.add-runner-to-repo.outputs.TOKEN }}
      #   run: echo TOKEN=$TOKEN
      - name: Dummy SSH run to fix stuff
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.PUBLIC_IP }}
          username: cloud-user
          key: ${{ secrets.CICD_SSH_KEY }}
          port: 22
          script: logout
      - name: executing remote ssh commands using ssh key
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        env:
          TOKEN: ${{ needs.add-runner-to-repo.outputs.TOKEN }}
        with:
          envs: TOKEN
          host: ${{ env.PUBLIC_IP }}
          username: cloud-user
          key: ${{ secrets.CICD_SSH_KEY }}
          port: 22
          script: |
            echo TOKEN=$TOKEN
            mkdir actions-runner && cd actions-runner  
            curl -o actions-runner-linux-x64-2.316.1.tar.gz -L https://github.com/actions/runner/releases/download/v2.316.1/actions-runner-linux-x64-2.316.1.tar.gz
            tar xzf ./actions-runner-linux-x64-2.316.1.tar.gz
            ./config.sh --url https://github.com/cspot-pipeline/cspot-cicd --token $TOKEN
            ./run.sh

  cspot-build-test:
    needs: [configure-remote-runner]
    runs-on: [self-hosted, Linux, X64]
    continue-on-error: true
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: build & install
        run: ./build-install.sh
      # - name: test

  terminate-runner:
    needs: [cspot-build-test, launch-instance]
    if: ${{ always() && !cancelled() && needs.launch-instance.result == 'success' }}
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: run terminate script
        run: |
          echo "CURR_ID: ${CURR_ID}"
          .github/terminate.sh $CURR_ID
        env:
           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
           CURR_ID: ${{ needs.launch-instance.outputs.CURR_ID }}
